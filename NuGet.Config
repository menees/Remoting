<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<!--
		"Common NuGet configurations" - Discusses NuGet.Config file placement in a build folder.
		https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior

		"nuget.config reference" - Discusses the settings available to configure in a NuGet.Config file.
		https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file

		"NuGet is now fully integrated into MSBuild"
		(https://devblogs.microsoft.com/nuget/NuGet-now-fully-integrated-into-MSBuild/)
		says, "Solution-local packages folders are no longer used" if you use PackageReference.

		"Managing the global packages, cache, and temp folders"
		(https://docs.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders)
		discusses how NuGet downloads to global-packages first.
	-->

	<packageManagement>
		<!-- Set the default package management format to use PackageReference. (Format 0 is packages.config, which is deprecated.) -->
		<add key="format" value="1" />
		<!-- Don't prompt to select a default package format on first package install since we always want PackageReference. -->
		<add key="disabled" value="False" />
	</packageManagement>

	<packageRestore>
		<!-- Allow NuGet to download missing packages. -->
		<add key="enabled" value="True" />
		<!-- Automatically check for missing packages during build in Visual Studio. -->
		<add key="automatic" value="True" />
	</packageRestore>

	<solution>
		<!-- Don't push the packages folder into source control. -->
		<add key="disableSourceControlIntegration" value="true" />
	</solution>
</configuration>
